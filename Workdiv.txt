When you're dividing the development work for a web application among a team of beginners and aiming for a functional but not necessarily polished product, it's important to keep the tasks manageable and well-distributed. Here's a breakdown of roles and tasks for a team of four people:

1. **Frontend Developer (HTML/CSS/JavaScript):**

   - **User Interface (UI) Design:** Focus on creating a simple, clean, and user-friendly interface for the web application. Use HTML and CSS for layout and styling.
   - **User Registration and Login:** Implement user registration and login functionality using HTML forms and JavaScript for client-side validation.
   - **User Dashboard:** Develop the user dashboard where users can view their mentorship requests, ongoing mentorships, and other relevant information.
   - **Profile Creation:** Create the forms and pages for users to complete their profiles, including uploading profile pictures.
   - **Notifications and Messages:** Implement the notification system and the ability to send and receive messages between users using JavaScript.
   - **Resource Repository and Project Collaboration UI:** Create the interfaces for accessing and interacting with the resource repository and project collaboration features.

2. **Backend Developer (Server-Side):**

   - **User Authentication:** Set up user authentication and user management on the server using a simple backend framework or platform (e.g., Node.js with Express).
   - **Database Integration:** Design a basic database schema to store user profiles, mentorship data, and other relevant information. Use a lightweight database system like SQLite or a cloud-based solution.
   - **Skill Matching Algorithm:** Develop a basic skill matching algorithm to suggest mentors to students based on the skills and goals provided in their profiles.
   - **User-User Connection:** Implement the logic for connecting mentors and students, as well as managing mentorship requests and approvals.
   - **Resource and Project Data Handling:** Create APIs to manage resources and projects, including storing, retrieving, and updating data.

3. **Full-Stack Developer (Frontend and Backend):**

   - **User Registration and Login (Backend):** Work on the server-side logic for user registration and login, including email confirmation.
   - **User Authentication (Frontend):** Implement client-side authentication using JavaScript, connecting it to the backend.
   - **User Profile (Frontend and Backend):** Develop the functionality for users to edit their profiles and upload profile pictures, connecting it to the backend for data storage.
   - **Notifications and Messages (Frontend and Backend):** Collaborate with the frontend developer to implement the user notification system and messaging functionality, including real-time updates if possible.

4. **Testing and Quality Assurance:**

   - **Testing:** Test the various features and functionalities of the web application, including registration, login, user profiles, mentor-student connections, resource sharing, and project collaboration.
   - **Bug Fixing:** Identify and report any bugs or issues and work with the developers to address them.
   - **User Feedback Integration:** Implement user feedback and reporting features.

This division of work allows each team member to focus on specific aspects of the project, whether it's frontend development, backend development, or a combination of both. It's important to maintain open communication within the team to ensure all components work together seamlessly and to resolve any issues that arise during development. Keep in mind that the goal is to create a functional prototype, so features can be simplified to meet the project's scope and timeline.